{"version":3,"file":"dragreorder.min.js","sources":["../src/dragreorder.js"],"sourcesContent":["'use strict';\n// eslint-disable-next-line no-unused-vars\nimport $ from 'jquery';\n// eslint-disable-next-line no-unused-vars\nimport { getString } from 'core/str';\n// eslint-disable-next-line no-unused-vars\nimport { prefetchString } from 'core/prefetch';\n\nexport default class DragReorder {\n    constructor(config) {\n        this.config = config;\n        this.draggingElement = null; // Элемент, который перетаскивается.\n        this.sourceContainer = null; // Исходная зона, из которой был взят элемент.\n        this.lists = document.querySelectorAll(this.config.lists.join(',')); // Все зоны (группы + \"Ответы\").\n\n        // Инициализация событий.\n        this.initEventListeners();\n    }\n\n    /**\n     * Инициализация обработчиков событий.\n     */\n    initEventListeners() {\n        // Настройка событий для всех зон.\n        this.lists.forEach(list => {\n            list.addEventListener('dragover', this.handleDragOver.bind(this));\n            list.addEventListener('drop', this.handleDrop.bind(this));\n            list.addEventListener('dragleave', this.handleDragLeave.bind(this)); // Убираем подсветку.\n        });\n\n        // Настройка событий для всех элементов.\n        const items = document.querySelectorAll(this.config.item);\n        items.forEach(item => {\n            item.addEventListener('dragstart', this.handleDragStart.bind(this));\n            item.addEventListener('dragend', this.handleDragEnd.bind(this));\n        });\n    }\n\n    /**\n * Обработка события `dragstart`.\n *\n * @param {DragEvent} e Событие перетаскивания.\n */\n    handleDragStart(e) {\n        this.draggingElement = e.target;\n        this.sourceContainer = e.target.closest('ul.sortablelist');\n        e.dataTransfer.effectAllowed = 'move';\n        e.dataTransfer.setData('text/plain', e.target.id);\n\n        // Добавляем визуальный эффект.\n        this.draggingElement.classList.add('dragging');\n    }\n\n    /**\n * Обработка события `dragend`.\n *\n */\n    handleDragEnd() {\n        if (this.draggingElement) {\n            this.draggingElement.classList.remove('dragging'); // Убираем визуальный эффект.\n\n            // Если элемент не попал в валидную зону, возвращаем его в исходную.\n            if (!this.draggingElement.closest('.sortablelist')) {\n                this.sourceContainer.appendChild(this.draggingElement);\n            }\n\n            // Обновляем JSON.\n            this.updateResponse();\n        }\n\n        // Сбрасываем состояния.\n        this.draggingElement = null;\n        this.sourceContainer = null;\n    }\n\n    /**\n * Обработка события `dragover`.\n *\n * @param {DragEvent} e Событие перетаскивания.\n */\n    handleDragOver(e) {\n        e.preventDefault(); // Разрешаем перетаскивание.\n        e.dataTransfer.dropEffect = 'move';\n\n        // Подсвечиваем зону.\n        const targetList = e.currentTarget;\n        if (targetList.classList.contains('sortablelist')) {\n            targetList.classList.add('drag-over');\n        }\n    }\n\n    /**\n * Убираем подсветку при выходе из зоны.\n *\n * @param {DragEvent} e Событие перетаскивания.\n */\n    handleDragLeave(e) {\n        const targetList = e.currentTarget;\n        if (targetList.classList.contains('sortablelist')) {\n            targetList.classList.remove('drag-over');\n        }\n    }\n\n    /**\n * Обработка события `drop`.\n *\n * @param {DragEvent} e Событие завершения перетаскивания.\n */\n    handleDrop(e) {\n        e.preventDefault();\n\n        const targetList = e.currentTarget;\n        if (!targetList.classList.contains('sortablelist')) {\n            return;\n        }\n\n        // Перемещаем элемент.\n        targetList.appendChild(this.draggingElement);\n\n        // Убираем подсветку зоны.\n        targetList.classList.remove('drag-over');\n\n        // Обновляем JSON.\n        this.updateResponse();\n    }\n\n    /**\n     * Обновление JSON с результатами.\n     */\n    updateResponse() {\n        const response = {};\n        this.lists.forEach(list => {\n            const groupId = list.id; // ID группы или зоны.\n            response[groupId] = Array.from(list.querySelectorAll(this.config.item)).map(item => item.id);\n        });\n\n        // Записываем результаты в скрытое поле.\n        const hiddenInput = document.querySelector(`#${this.config.responseid}`);\n        hiddenInput.value = JSON.stringify(response);\n    }\n\n    /**\n     * Инициализация класса DragReorder.\n     * @param {DragEvent} config Событие перетаскивания.\n     */\n    static init(config) {\n        new DragReorder(config);\n    }\n}\n"],"names":["DragReorder","constructor","config","draggingElement","sourceContainer","lists","document","querySelectorAll","this","join","initEventListeners","forEach","list","addEventListener","handleDragOver","bind","handleDrop","handleDragLeave","item","handleDragStart","handleDragEnd","e","target","closest","dataTransfer","effectAllowed","setData","id","classList","add","remove","appendChild","updateResponse","preventDefault","dropEffect","targetList","currentTarget","contains","response","groupId","Array","from","map","querySelector","responseid","value","JSON","stringify"],"mappings":"uRAQqBA,YACjBC,YAAYC,aACHA,OAASA,YACTC,gBAAkB,UAClBC,gBAAkB,UAClBC,MAAQC,SAASC,iBAAiBC,KAAKN,OAAOG,MAAMI,KAAK,WAGzDC,qBAMTA,0BAESL,MAAMM,SAAQC,OACfA,KAAKC,iBAAiB,WAAYL,KAAKM,eAAeC,KAAKP,OAC3DI,KAAKC,iBAAiB,OAAQL,KAAKQ,WAAWD,KAAKP,OACnDI,KAAKC,iBAAiB,YAAaL,KAAKS,gBAAgBF,KAAKP,UAInDF,SAASC,iBAAiBC,KAAKN,OAAOgB,MAC9CP,SAAQO,OACVA,KAAKL,iBAAiB,YAAaL,KAAKW,gBAAgBJ,KAAKP,OAC7DU,KAAKL,iBAAiB,UAAWL,KAAKY,cAAcL,KAAKP,UASjEW,gBAAgBE,QACPlB,gBAAkBkB,EAAEC,YACpBlB,gBAAkBiB,EAAEC,OAAOC,QAAQ,mBACxCF,EAAEG,aAAaC,cAAgB,OAC/BJ,EAAEG,aAAaE,QAAQ,aAAcL,EAAEC,OAAOK,SAGzCxB,gBAAgByB,UAAUC,IAAI,YAOvCT,gBACQZ,KAAKL,uBACAA,gBAAgByB,UAAUE,OAAO,YAGjCtB,KAAKL,gBAAgBoB,QAAQ,uBACzBnB,gBAAgB2B,YAAYvB,KAAKL,sBAIrC6B,uBAIJ7B,gBAAkB,UAClBC,gBAAkB,KAQ3BU,eAAeO,GACXA,EAAEY,iBACFZ,EAAEG,aAAaU,WAAa,aAGtBC,WAAad,EAAEe,cACjBD,WAAWP,UAAUS,SAAS,iBAC9BF,WAAWP,UAAUC,IAAI,aASjCZ,gBAAgBI,SACNc,WAAad,EAAEe,cACjBD,WAAWP,UAAUS,SAAS,iBAC9BF,WAAWP,UAAUE,OAAO,aASpCd,WAAWK,GACPA,EAAEY,uBAEIE,WAAad,EAAEe,cAChBD,WAAWP,UAAUS,SAAS,kBAKnCF,WAAWJ,YAAYvB,KAAKL,iBAG5BgC,WAAWP,UAAUE,OAAO,kBAGvBE,kBAMTA,uBACUM,SAAW,QACZjC,MAAMM,SAAQC,aACT2B,QAAU3B,KAAKe,GACrBW,SAASC,SAAWC,MAAMC,KAAK7B,KAAKL,iBAAiBC,KAAKN,OAAOgB,OAAOwB,KAAIxB,MAAQA,KAAKS,QAIzErB,SAASqC,yBAAkBnC,KAAKN,OAAO0C,aAC/CC,MAAQC,KAAKC,UAAUT,sBAO3BpC,YACJF,YAAYE"}